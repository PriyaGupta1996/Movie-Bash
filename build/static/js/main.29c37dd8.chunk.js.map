{"version":3,"sources":["GlobalStyle.js","images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/Header.styles.js","components/Header/index.js","config.js","API.js","components/HeroImage/HeroImage.styles.js","components/HeroImage/index.js","components/Grid/Grid.styles.js","components/Grid/index.js","components/Thumb/Thumb.styles.js","components/Thumb/index.js","components/Spinner/index.js","components/Spinner/Spinner.styles.js","images/search-icon.svg","components/SearchBar/SearchBar.styles.js","components/SearchBar/index.js","components/Button/Button.styles.js","components/Button/index.js","helpers.js","hooks/useHomeFetch.js","images/no_image.jpg","components/Home.js","components/BreadCrumb/BreadCrumb.styles.js","components/BreadCrumb/index.js","components/MovieInfo/MovieInfo.styles.js","components/MovieInfo/index.js","components/MovieInfoBar/MovieInfoBar.styles.js","components/MovieInfoBar/index.js","components/Actor/Actor.styles.js","components/Actor/index.js","components/Movie.js","hooks/useMovieFetch.js","components/NotFound.js","components/ActorDesc/ActorDesc.styles.js","components/TimelineCredits/TimelineCredits.styles.js","components/TimelineCredits/index.js","components/TAB/TAB.styles.js","components/TAB/index.js","components/Timeline/index.js","hooks/useTimelineFetch.js","components/ActorDesc/index.js","components/ActorInfo/index.js","hooks/useActorFetch.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","Wrapper","styled","div","Content","LogoImg","img","TMDBLogoImg","Header","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","process","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchActor","actorId","fetchMovie","movieId","fetchCredits","creditsEndpoint","fetchActorCredits","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","value","rating","image","Text","HeroImage","title","text","Grid","header","children","Image","Thumb","clickable","Spinner","SearchBar","setSearchTerm","useState","state","setState","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","searchIcon","type","placeholder","onChange","event","currentTarget","Button","callback","onClick","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","isPersistedState","stateName","sessionState","sessionStorage","getItem","parse","initialState","results","total_pages","total_results","Home","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","API","movies","console","log","prev","setItem","useHomeFetch","backdrop_path","original_title","overview","map","movie","poster_path","NoImage","id","BreadCrumb","Title","backdrop","MovieInfo","className","vote_average","directors","length","director","name","credit_id","MovieInfoBar","budget","revenue","Actor","character","imageUrl","Movie","credits","crew","filter","member","job","actor","cast","useMoviefetch","useParams","runtime","profile_path","NotFound","TimelineCredits","date","year","substring","TAB","Timeline","fetchTimeline","useTimelineFetch","timeline","sortedCast","sort","b","release_date","Date","sortedCrew","castObject","crewObject","ActorDesc","imageURL","actor_year","birthday","getFullYear","age","biography","known_for_department","gender","place_of_birth","also_known_as","ActorInfo","useActorFetch","App","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29c37dd8.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\n\n\n\nexport const GlobalStyle = createGlobalStyle`\n:root{\n    --maxWidth : 1280px ;   //setting the variable in the css template literal with --\n    --white: #fff;\n    --lightGrey: #eee;\n    --medGrey:#353535;\n    --darkGrey: #1c1c1c;\n    --fontSuperBig: 2.5rem;\n    --fontBig: 1.5rem;\n    --fontMed: 1.2rem;\n    --fontSmall: 1rem;\n}\n\n*{                         //for whole file.\n    box-sizing :border-box;\n    font-family :'Abel',sans-serif;\n}\n\nbody{\n    margin:0;\n    padding:0;\n\n    h1{\n        font-size:2rem; \n        font-weight :600;\n        color:var(--white); //grabbing a variable, created above.\n    }\n\n    h3{\n        font-size:1.1rem;\n        font-weight :600;\n    }\n\n    p{\n        font-size:1rem;\n        color:var(--white);\n    }\n}\n\n`;","export default __webpack_public_path__ + \"static/media/react-movie-logo.42955eb6.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.f15b6632.svg\";","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\nbackground : var(--darkGrey);\npadding: 0 20px;\n\n`;\n\nexport const Content = styled.div`\ndisplay: flex;\nalign-items:center;\njustify-content: space-between;\nmax-width: var(--maxWidth);\npadding:20px 0 ;\nmargin: 0 auto;\n`;\n\nexport const LogoImg =styled.img`\nwidth:200px;\n\n@media screen and (max-Width : 500px)\n{\n    width: 150px;\n}\n\n`;\nexport const TMDBLogoImg =styled.img`\nwidth:100px;\n\n@media screen and (max-Width : 500px)\n{\n    width: 80px;\n}`;\n\n\n\n\n \n\n","//file that is called when header folder is imported. if renaming then we need to import './Header/\"name\"'\n\n\nimport React from \"react\";\nimport {Link} from 'react-router-dom';\nimport RMDBLogo from  '../../images/react-movie-logo.svg';\nimport TMDBLogo from '../../images/tmdb_logo.svg';\nimport { Wrapper, Content ,LogoImg, TMDBLogoImg} from './Header.styles';\n\nconst Header =() => (\n\n    <Wrapper>\n        <Content>\n            <Link to='/'>\n                <LogoImg src={RMDBLogo} alt ='rmdb-logo' />\n            </Link>\n            <TMDBLogoImg src ={TMDBLogo} alt ='tmdb-logo' />\n        </Content>\n    </Wrapper>\n)\n\nexport default Header;\n\n","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\n\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w780';\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n};\n","import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL\n} from './config';\n\nconst defaultConfig = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst apiSettings = {\n\n  fetchMovies: async (searchTerm, page) => {\n    const endpoint = searchTerm\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchActor: async actorId => {\n    const endpoint = `${API_URL}person/${actorId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchMovie: async movieId => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async movieId => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n\n  fetchActorCredits: async actorId => {\n    const creditsEndpoint = `${API_URL}person/${actorId}/movie_credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n  // Bonus material below for login\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n  authenticate: async (requestToken, username, password) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken\n    };\n    // First authenticate the requestToken\n    const data = await (\n      await fetch(LOGIN_URL, {\n        ...defaultConfig,\n        body: JSON.stringify(bodyData)\n      })\n    ).json();\n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (\n        await fetch(SESSION_ID_URL, {\n          ...defaultConfig,\n          body: JSON.stringify({ request_token: requestToken })\n        })\n      ).json();\n      return sessionId;\n    }\n  },\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n    const rating = await (\n      await fetch(endpoint, {\n        ...defaultConfig,\n        body: JSON.stringify({ value })\n      })\n    ).json();\n\n    return rating;\n  }\n};\n\nexport default apiSettings;\n","import styled from \"styled-components\";\n\n\nexport const Wrapper=styled.div`\n    background: linear-gradient(\n    to bottom,\n    rgba(0,0,0,0)41%, \n    rgba(0,0,0,0.65)100%\n    ),\n\n    url(${({image})=>image}), var(--darkGrey);\n    background-size:100%,cover;\n    background-position:center;\n    height:600px;\n    position:relative;\n    animation: animateHeroImage 1s;\n    \n    @keyframes animateHeroImage\n    {\n        from {\n            opacity:0;\n        }\n        to{\n            opacity :1;\n        }\n    }\n\n`;\nexport const Content =styled.div`\npadding :20px;\nmax-width:0 auto;\n`;\n\nexport const Text =styled.div`\nz-index:100;\nmax-width:700px;\nposition:absolute;\nbottom:40px;\nmargin-right:20px;\nmin-height:100px;\ncolor:var(--white);\n\nh1{\n    font-size:var(--fontSuperBig)\n\n    @media screen and(max-width:720px)\n    {\n        font-size: var(--fontBig);\n    }\n}\n\np{\n    font-size : var(--fontMed);\n\n    @media screen and (max-width :  720px)\n    {\n        font-size: var(--fontSmall);\n    }\n}\n@media screen and(max-width:720px)\n{\n    max-width : 100%;\n}\n`;\n\n","import react from \"react\";\nimport PropTypes from \"prop-types\";\n\n//styles\nimport { Wrapper, Content, Text } from './HeroImage.styles';\n\nconst HeroImage = ({ image, title, text }) =>\n(\n    <Wrapper image={image}>\n        {/* first image is the prop */}\n        <Content>\n            <Text>\n                <h1>{title}</h1>\n                {/* javascript expression is written in {} in JSX. */}\n                <p>{text}</p>\n            </Text>\n        </Content>\n\n    </Wrapper>\n)\n\nHeroImage.propTypes = {\n    image: PropTypes.string,\n    title: PropTypes.string,\n    text: PropTypes.string,\n}\n\n\n\n\n\nexport default HeroImage;\n\n","import styled from \"styled-components\";\n\n\nexport const Wrapper = styled.div`\nmax-width: var(--maxWidth);\nmargin: 0 auto;\npadding: 0 20px;\n\nh1{\n    color: var(--medGrey);\n    @media screen and (max-width:768px)\n    {\n        font-size: var(--fontBig);\n    }\n\n}\n\n`;\nexport const Content = styled.div`\ndisplay: grid;\ngrid-template-columns: repeat(auto-fill,minmax(200px,1fr));\ngrid-gap:2rem ;\n`;\n\n\n","import react from \"react\";\nimport PropTypes from 'prop-types';\n\n//styles\nimport { Wrapper, Content } from './Grid.styles';\n\nconst Grid = ({ header, children }) =>\n(\n    <Wrapper>\n        <h1>{header}</h1>\n        <Content>\n            {children}\n        </Content>\n    </Wrapper>\n)\n\nGrid.propTypes = {\n    header: PropTypes.string,  //noNeed to check the Children as it is a Built in Prop.\n}\nexport default Grid;\n\n\n","import styled from \"styled-components\";\n\n\nexport const Image=styled.img`\nwidth:100%;\nmax-width:720px;\ntransition: all 0.3s;\nobject-fit:cover;\nborder-radius:20px;\nanimation: animateThumb 0.5s;\n\n:hover{\n    opacity: 0.8;\n}\n\n@keyframes animateThumb{\n    from {\n        opacity: 0;\n    }\n    to{\n        opacity: 1;\n    }\n}\n`;\n\n\n ","import PropTypes from \"prop-types\";\n\n\n//styles\nimport { Image } from './Thumb.styles';\nimport { Link } from 'react-router-dom';\n\nconst Thumb = ({ image, movieId, clickable }) =>\n(\n    <div>\n        {clickable ? (\n            <Link to={`/${movieId}`} >\n                <Image src={image} alt='movie-thumb' />\n            </Link>\n        ) : (\n            <Image src={image} alt='movie-thumb' />\n        )}\n    </div>\n)\n\nThumb.propTypes = {\n    image: PropTypes.string,\n    movieId: PropTypes.number,\n    clickable: PropTypes.bool,\n}\n\nexport default Thumb;","import { Spinner } from \"./Spinner.styles\";\n\nexport default Spinner;","import styled from \"styled-components\";\n\nexport const Spinner = styled.div`\nborder: 5px solid var(--lightGrey);\nborder-top:5px solid var(--medGrey);\nborder-radius:50%;\nwidth:50px;\nheight:50px;\nanimation: spin 0.8s linear infinite;\nmargin : 20px auto;\n\n@keyframes spin{\n    0%{\n        transform: rotate(0deg);\n    }\n    100%{\n        transform: rotate(360deg);\n    }\n}\n\n`;\n","export default __webpack_public_path__ + \"static/media/search-icon.cd820f5a.svg\";","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\ndisplay: flex;\nalign-items: center;\nheight: 100px;\nbackground: var(--darkGrey);\npadding: 0 20px;\n\n\n`;\n\n\nexport const Content=styled.div`\nposition: relative;\nmax-width: var(--maxWidth);\nwidth: 100%;\nheight: 55px;\nbackground: var(--medGrey);\nmargin:0 auto;\nborder-radius:40px;\ncolor: var(--white);\n\nimg{\n    position:absolute;\n    left:15px;\n    top:14px;\n    width:30px;\n}\ninput{\n    font-size:var(--fontBig);\n    position:absolute;\n    left:0;\n    margin: 8px 0;\n    padding: 0 0 0 60px;\n    border:0;\n    width: 95%;\n    background: transparent;\n    height:40px;\n    color:var(--white);\n\n    :focus{\n        outline:none;\n    }\n\n}\n\n`;\n\n","import React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\n//Image\nimport searchIcon from \"../../images/search-icon.svg\"\nimport { Wrapper, Content } from \"./SearchBar.styles\";\n\nconst SearchBar = ({ setSearchTerm }) => {\n    const [state, setState] = useState('');\n    const initial = useRef(true); //so that the timer is not rendered again and again even when we have  not tocuhed the search field of input.\n\n    useEffect(() => {\n\n        if (initial.current) {\n            initial.current = false;\n            //console.log(initial.current+\"HI\");\n            return;\n        }\n        // console.log(initial.current+\"HI there\");\n\n        const timer = setTimeout(() => {\n            setSearchTerm(state)\n        }, 500)\n\n        return () => clearTimeout(timer)\n    }, [setSearchTerm, state])\n\n    return (\n        <Wrapper>\n            <Content>\n                <img src={searchIcon} alt='search-icon' />\n                <input\n                    type='text'\n                    placeholder='Search Movie'\n                    onChange={event => setState(event.currentTarget.value)}\n                    value={state}\n                />\n            </Content>\n        </Wrapper>\n    )\n}\n\nSearchBar.propTypes = {\n    callback: PropTypes.func, //as it is a function which is going as an arguemnt. \n}\nexport default SearchBar;","import styled from \"styled-components\";\n\nexport const Wrapper=styled.div`\ndisplay: block;\nbackground: var(--darkGrey);\nwidth: 25%;\nmin-width:200px;\nheight:60px;\nborder-radius: 30px;\ncolor:var(--white);\nborder:0;\nfont-size: var(--fontBig);\nmargin:20px auto;\ntransition:all 0.3s;\noutline: none;\ncursor: pointer;\ntext-align: center;\npadding: 0.8% 0;\n\n:hover{\n    opacity: 0.8;\n}\n\n\n\n\n`; ","import React from \"react\";\nimport { Wrapper } from \"./Button.styles\";\nimport PropTypes from \"prop-types\";\n\nconst Button = ({ text, callback }) =>\n(\n    <Wrapper type='button' onClick={callback}>\n        {text}\n    </Wrapper>\n);\n\nButton.propTypes = {\n    text: PropTypes.string,\n    callback: PropTypes.func,\n}\n\n\nexport default Button;","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = money => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n\n\nexport const isPersistedState = stateName => { \n  const sessionState = sessionStorage.getItem(stateName);\n  return sessionState && JSON.parse(sessionState);\n};","import { useState, useEffect, useRef } from \"react\";\nimport API from '../API';\n\n//helper\nimport { isPersistedState } from \"../helpers\";\n\nconst initialState = {\n    page: 0,\n    results: [],\n    total_pages: 0,\n    total_results: 0\n}\n\n\n\nexport const useHomeFetch = () => {\n    const [searchTerm, setSearchTerm] = useState('');\n    const [state, setState] = useState(initialState);  //states getting set\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n    const [isLoadingMore, setIsLoadingMore] = useState(false);\n\n    //console.log(searchTerm);\n    const fetchMovies = async (page, searchTerm = '') => {\n        try {\n            setError(false);\n            setLoading(true);\n            const movies = await API.fetchMovies(searchTerm, page);\n            console.log(movies);\n\n            setState(prev => ({\n                ...movies,\n                results:\n                    page > 1 ? [...prev.results, ...movies.results] : [...movies.results]\n\n            }))\n        }\n        catch (error) {\n            setError(true);\n        }\n        setLoading(false);\n    };\n\n    //initial and Search\n    useEffect(() => {\n        if (!searchTerm) {\n            const sessionState = isPersistedState('homeState');\n\n            if (sessionState) {\n                setState(sessionState);\n                return;\n            }\n        }\n\n        fetchMovies(1, searchTerm) //it will run only once. \n\n    }, [searchTerm]) //the second arguemnt is the conditon when we want to trigger the first arguement function.\n\n    //Load More\n\n    useEffect(() => {\n        if (!isLoadingMore) return;\n        fetchMovies(state.page + 1, searchTerm);\n        setIsLoadingMore(false);\n\n    }, [isLoadingMore, searchTerm, state.page]);\n\n    //write the session storage\n    useEffect(() => {\n        if (!searchTerm)\n            sessionStorage.setItem('homeState', JSON.stringify(state));\n        setLoading(false);\n    }, [isLoadingMore, searchTerm, state])\n\n    return { state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore };\n}","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import React from 'react';\n\n// API\nimport { nominalTypeHack } from 'prop-types';\nimport API from '../API';\n\n// config\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from '../config';\n// components\nimport HeroImage from './HeroImage';\nimport Grid from './Grid';\nimport Thumb from './Thumb';\nimport Spinner from './Spinner';\nimport SearchBar from './SearchBar';\nimport Button from './Button';\n\n// Hook\nimport { useHomeFetch } from '../hooks/useHomeFetch';\n\n// Image\n\nimport NoImage from '../images/no_image.jpg';\n\nconst Home = function () {\n  const {\n    state,\n    loading,\n    error,\n    searchTerm,\n    setSearchTerm,\n    setIsLoadingMore,\n  } = useHomeFetch();\n  console.log(state);\n\n  if (error) return <div>Something Went Wrong....</div>;\n  return (\n    <>\n      {/* creating fragment as JSX  can return only one parent element */}\n      {!searchTerm && state.results[0]\n        ? (\n          <HeroImage\n            image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\n            title={state.results[0].original_title}\n            text={state.results[0].overview}\n          />\n        ) : null}\n\n      <SearchBar setSearchTerm={setSearchTerm} />\n\n      <Grid header={searchTerm ? 'Search Result' : 'Popular Movies'}>\n        {state.results.map((movie) => (\n          // <div>{movie.title}</div>\n          <Thumb\n            key={movie.id}\n            clickable\n            image={\n              movie.poster_path ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path : NoImage\n            }\n            movieId={movie.id}\n          />\n        ))}\n\n      </Grid>\n      {loading && <Spinner />}\n      {state.page < state.total_pages && !loading && (\n        <Button\n          text=\"Load More\"\n          callback={() => setIsLoadingMore(true)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\ndisplay: flex;\nalign-items:center;\njustify-content: center;\nwidth:100%;\nheight: 70px;\nbackground: var(--medGrey);\ncolor: var(--white);\n\n`;\n\nexport const Content = styled.div`\ndisplay: flex;\nwidth: 100%;\nmax-width: var(--maxWidth);\npadding :0 20px ;\n\nspan{\n    \n    font-size: var(--fontMed);\n    color:var(--white);\n    padding-right:10px ;\n\n    @media screen and (max-width: 768px)\n    {\n    font-size: var(--fontSmall);\n    }\n}\n\n\n`;\n\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Proptypes from \"prop-types\";\n\nimport { Wrapper, Content } from './BreadCrumb.styles';\n\n\nconst BreadCrumb = ({ Title }) =>\n(\n\n    <Wrapper>\n        <Content>\n            <Link to=\"/\"> <span>Home</span></Link>\n            <span>|</span>\n            <span>{Title}</span>\n        </Content>\n    </Wrapper>\n)\n\nBreadCrumb.propTypes = {\n    Title: Proptypes.string\n}\n\nexport default BreadCrumb;","import styled from 'styled-components';\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from '../../config.js'\n\nexport const Wrapper = styled.div`\nbackground: ${({ backdrop }) =>\n        backdrop ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop}')` : '#000'};\nbackground-size:cover;\nbackground-size:center;\npadding: 40px 20px;\nanimation: animationMovieInfo 1s;\n\n@keyframes {\n    from {\n        opacity: 0;\n    }\n    to{\n        opacity: 1;\n    } \n}\n\n`;\n\n\n\nexport const Content = styled.div`\n\ndisplay: flex;\nmax-width: var(--maxWidth);\nmargin: 0 auto;\nbackground: rgba(0,0,0,0.7);\nborder-radius: 20px;\n\n@media screen and (max-width : 768px)\n{\n    display: block;\n    max-height: none;\n}\n\n\n`;\n\n\n\nexport const Text = styled.div`\n\nwidth: 100%;\npadding :20px 40px;\ncolor:var(--white);\noverflow:hidden;\n\n.Rating-directors //grabbing the class\n{\ndisplay: flex;\njustify-content:flex-start;\n}\n\n.score{\ndisplay: flex;\nalign-items:center;\njustify-content:center;\nwidth:35px;\nheight:35px;\nbackground: #fff;\ncolor: #000;\nfont-weight:800;\nborder-radius: 50%;\nmargin:0;\n}\n\n.director{\n    margin: 0 0 0 40px;\n\np{\n    margin:0;\n}\n}\n\nh1{\n    @media screen and (max-width: 768px){\n        font-size: var(--fontBig);\n    }\n}`;\n\n","import React from \"react\";\nimport Thumb from \"../Thumb\";\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../config.js\";\nimport PropTypes from \"prop-types\";\n\nimport NoImage from '../../images/no_image.jpg';\nimport { Wrapper, Content, Text } from './MovieInfo.styles';\n\nconst MovieInfo = ({ movie }) => (\n    <Wrapper backdrop={movie.backdrop_path}>\n        <Content>\n            <Thumb\n                image={\n                    movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : NoImage\n                }\n                clickable={false}\n                alt='movie-thumb' />\n\n            <Text>\n                <h1> {movie.title}</h1>\n                <h3>PLOT</h3>\n                <p>{movie.overview}</p>\n\n                <div className=\"Rating-directors\">\n                    <div>\n                        <h3>Rating</h3>\n                        <div className=\"score\"> {movie.vote_average}</div> </div>\n                    <div className=\"director\">\n                        <h3>DIRECTOR{movie.directors.length > 1 ? 'S' : ''}</h3>\n                        {movie.directors.map(director => (\n                            <p key={director.credit_id}>{director.name}</p>\n\n                        ))}\n                    </div>\n                </div>\n            </Text>\n        </Content>\n\n    </Wrapper>\n)\n\n\nMovieInfo.propTypes = {\n    movie: PropTypes.object\n}\n\nexport default MovieInfo;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\ndisplay:flex;\nalign-items:center;\nmin-height:100px;\nbackground : var(--darkGrey);\npadding:0 20px;\n\n`;\nexport const Content = styled.div`\ndisplay:flex;\nmax-width:var (--maxWidth);\nwidth:100%;\nmargin: 0 auto;\n\n.column{\n    display:flex;\n    align-items:center;\n    justify-content: center;\n    background: var(--medGrey);\n    border-radius:20px;\n    margin: 0 20px;\n    flex:1;\n\n    :first-child{\n        margin-left: 0;\n    }\n    :last-child{\n        margin-right: 0;\n    }\n\n}\n\n@media screen and (max-width: 768px)\n{\n    display:block;\n    .column{\n        margin: 20px 0;\n    }\n}\n\n\n`;\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\"; \n//Helper\nimport { calcTime, convertMoney } from '../../helpers';\n//styles\nimport { Wrapper, Content } from \"./MovieInfoBar.styles\";\n\n\nconst MovieInfoBar = ({ time, budget, revenue }) =>\n(\n    <Wrapper>\n        <Content>\n            <div className=\"column\">\n                <p>Running Time: {calcTime(time)}</p></div>\n            <div className=\"column\">\n                <p>Budget: {convertMoney(budget)}</p></div>\n            <div className=\"column\">\n                <p>Revenue: {convertMoney(revenue)}</p></div>\n        </Content>\n    </Wrapper>\n)\n\nMovieInfoBar.propTypes = {\n    time: PropTypes.number,\n    budget: PropTypes.number,\n    revenue: PropTypes.number,\n}\n\n\nexport default MovieInfoBar;","import styled from \"styled-components\";\n\n\nexport const Wrapper = styled.div`\n\ncolor: var(--white);\nbackground: var(--darkGrey);\nborder-radius:20px;\npadding:5px;\ntext-align:center;\n\nh3{\n    margin:10px 0 0 0;\n}\np{\n    margin: 5px 0;\n}\n\n`;\n\n\nexport const Image = styled.img`\ndisplay:block;\nwidth: 100%;\nheight: 200px;\nobject-fit: cover;\nborder-radius: 15px 0;\n\n\n\n`;\n\n","import React from \"react\";\nimport PropTypes from 'prop-types';\n\n//styles\n\nimport { Wrapper, Image } from './Actor.styles';\nimport { Link } from 'react-router-dom';\n\nconst Actor = ({ clickable, id, name, character, imageUrl }) => (\n\n    <Wrapper>\n\n        {clickable ? (\n\n            <Link to={`/person/${id}`}>\n                <Image src={imageUrl} alt='actor-thumb' />\n            </Link>) : (<Image src={imageUrl} alt='actor-thumb' />)}\n        <h3>{name}</h3>\n        <p>{character}</p>\n    </Wrapper>\n);\nActor.propTypes = {\n    name: PropTypes.string,\n    character: PropTypes.string,\n    imageUrl: PropTypes.string,\n\n}\nexport default Actor;","\n\nimport React from \"react\";\nimport { useParams } from 'react-router';\n\n// config\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../config';\n\n// components\nimport Grid from './Grid';\nimport Spinner from './Spinner';\nimport BreadCrumb from './BreadCrumb'\nimport MovieInfo from \"./MovieInfo\";\nimport MovieInfoBar from \"./MovieInfoBar\";\nimport Actor from \"./Actor\";\n\n// hook\nimport { useMoviefetch } from '../hooks/useMovieFetch';\n\n// image\nimport NoImage from '../images/no_image.jpg';\n\nconst Movie = function () {\n    const { movieId } = useParams();\n    const { state: movie, loading, error } = useMoviefetch(movieId);\n    console.log(movie);\n    if (loading)\n        return <Spinner />\n    if (error) return <div> Something went wrong.... </div>\n\n    return (\n        <>\n            <BreadCrumb Title={movie.original_title} />\n            <MovieInfo movie={movie} />\n            <MovieInfoBar\n                time={movie.runtime}\n                budget={movie.budget}\n                revenue={movie.revenue} />\n\n            <Grid header='Actors'>\n                {movie.actor.map(actor => (\n                    <Actor\n                        clickable\n                        key={actor.credit_id}\n                        id={actor.id}\n                        name={actor.name}\n                        character={actor.character}\n                        imageUrl={\n                            actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}` : NoImage\n                        } />\n\n                ))}\n            </Grid>\n        </>\n    );\n};\n\nexport default Movie;\n","import { useState, useEffect } from 'react';\nimport API from '../API';\n\n//helpers\nimport { isPersistedState } from '../helpers';\n\nexport const useMoviefetch = movieId => {\n    const [state, setState] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        const fetchMovie = async () => {\n\n            try {\n\n                setLoading(true);\n                setError(false);\n\n                const movie = await API.fetchMovie(movieId);\n                const credits = await API.fetchCredits(movieId);\n                //director\n                const directors = credits.crew.filter(member =>\n                    member.job === 'Director');\n\n\n                setState(\n                    {\n                        ...movie, actor: credits.cast, directors: directors\n                    })\n                setLoading(false);\n\n            } catch (error) {\n                setError(true);\n            }\n        };\n\n        const sessionState = isPersistedState(movieId);\n        if (sessionState) {\n            setState(sessionState);\n            setLoading(false);\n            return;\n        }\n\n        fetchMovie();\n\n    }, [movieId])\n\n    //write to session Storage\n\n    useEffect(() => {\n        sessionStorage.setItem(movieId, JSON.stringify(state))\n\n    }, [movieId, state])\n\n\n    return { state, loading, error };\n}\n","import React from \"react\";\nconst NotFound=  ()=>\n(\n    <div>Not Found</div>\n)\n \n\nexport default NotFound;\n","import styled from \"styled-components\";\n\n\nexport const Content = styled.div`\n//background-color: black;\ndisplay: flex;\n\n\n\n\n\n.aligns{\nline-height:1;\nwidth:50%;\ndisplay: flex;\nflex-direction: column;\norder:1\n\n\n\n}\n/* @media screen and (max-width: 400px){\n    \n    flex-direction: column;\n    align-items: center;\n} */\n\n\n\n.bio{\n\n.bio-text{\nword-spacing:3px;\nline-height:1.8;\nfont-size:1.2rem;\nfont-weight:900:\n}\n\n    h1,p{\n        color:black;\n    }\n    width:95%;\n    display: flex;\n    flex-direction: column;\n    order:2;\n    margin-top: 2%;\n    margin-right: 5%;\n    text-align:justify;\n    \n   \n\n}\n\n.photo{\n    padding:10px;\n    width: 70%;\n    margin-top: 10%;\n\n}\n\n`;\n\nexport const Text = styled.div`\n\npadding : 20px;\nfont-size: 1.2rem;\n\nh2{\n    color: black;\n    font-size : 1.8rem;\n    font-weight:900;\n}\n\np{\n    color: black;\n    font-size : 1rem;\n}\n\n.actor-detail-heading{\n    font-weight:900;\n\n    font-family: \"Arial\" ,Sans-serif;\n}\n\n\n\ndisplay:flex;\nflex-direction: column;\nwidth: 50%;\n\n\n`;\n\n\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n\n.title{\n font-weight:700;\n font-family: \"Times New Roman\",\"serif\";\n font-size:1.2rem;\n \n \n}\n\n.character{\n    font-weight:200;\n    font-family: \"Arial\",\"Sans-serif\";\n\n}\n\np{\n    word-spacing: 3px;\n}\n\n\n\n\n\n`;","import react from \"react\";\nimport { Wrapper } from \"./TimelineCredits.styles\"\n\nconst TimelineCredits = ({ date, title, character }) => {\n\n    //let year = (new Date(date)).getFullYear();\n\n    let year = date?.substring(0, 4);\n    return (\n        <Wrapper>\n            <p>{date ? year : \"--\"} <text className=\"title\"> {title} </text> as  < text className=\"character\"> {character} </text> </p>\n        </Wrapper>\n    )\n\n\n}\n\nexport default TimelineCredits;","import styled from \"styled-components\";\n\n\nexport const Wrapper = styled.div`\ndisplay:flex;\nflex-direction:column;\nh1{\n    color:\"red\";\n    padding:1px;\n}\n\n\n`;\n\nexport const Content = styled.div`\ndisplay :flex;\nflex-direction: column;\nborder: 3px solid black;\npadding:10px;\n\n\n\n`;\n\n\n","import react from \"react\";\n\n//styles\nimport { Wrapper, Content } from \"./TAB.styles\"\n\nconst TAB = ({ header, children }) => (\n    <Wrapper>\n        <h1>{header}</h1>\n        <Content>\n            {children}\n        </Content>\n    </Wrapper>\n\n)\n\nexport default TAB;","import React from \"react\"\nimport { useParams } from \"react-router-dom\";\n\n//hook\nimport { useTimelineFetch } from \"../../hooks/useTimelineFetch\";\n\n\n//components\nimport Spinner from \"../Spinner\";\nimport TimelineCredits from \"../TimelineCredits\";\nimport TAB from \"../TAB\";\n\n\n\n\nconst Timeline = () => {\n    const { id } = useParams();\n    const { state: timeline, loading, error } = useTimelineFetch(id);\n    //console.log(timeline.cast);\n    //console.log(timeline.crew);\n\n    if (loading)\n        return <Spinner />\n\n    if (error)\n        return <div> Something Went Wrong....</div>\n\n    const sortedCast = timeline.cast.sort((a, b) => {\n\n\n        if (a.release_date === \"\")\n            return -1;\n        if (b.release_date === \"\")\n            return 1;\n\n\n        let date1 = new Date(a.release_date);\n        let date2 = new Date(b.release_date);\n\n\n        return date1 < date2 ? 1 : -1;\n\n\n    })\n\n    const sortedCrew = timeline.crew.sort((a, b) => {\n\n\n        if (a.release_date === \"\")\n            return -1;\n        if (b.release_date === \"\")\n            return 1;\n\n\n        let date1 = new Date(a.release_date);\n        let date2 = new Date(b.release_date);\n\n\n        return date1 < date2 ? 1 : -1;\n\n\n    })\n\n    return (\n        <>\n            <TAB header=\"Acting\">\n                {sortedCast.map(castObject => (\n                    <TimelineCredits\n                        key={castObject.id}\n                        date={castObject.release_date}\n                        title={castObject.title}\n                        character={castObject.character}\n                    />\n\n                ))\n                }\n            </TAB>\n\n            <TAB header=\"Crew\">\n                {sortedCrew.map(crewObject => (\n                    <TimelineCredits\n                        key={crewObject.id}\n                        date={crewObject.release_date}\n                        title={crewObject.title}\n                        character={crewObject.job}\n                    />\n\n                ))\n                }\n            </TAB>\n\n\n        </>\n    )\n\n}\n\n\nexport default Timeline;","import { useState, useEffect, useRef } from \"react\";\nimport API from '../API';\n\n\n\nexport const useTimelineFetch = (actorId) => {\n    const [state, setState] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        const fetchTimeline = async () => {\n            try {\n                setLoading(true);\n                setError(false);\n                const actor = await API.fetchActorCredits(actorId);\n\n                setState({\n                    ...actor\n                })\n                setLoading(false);\n            }\n            catch (error) {\n                setError(true);\n            }\n        };\n\n        fetchTimeline();\n    }, [actorId])\n\n    return { state, loading, error };\n\n\n}","import React from \"react\";\nimport { Content, Text } from '../ActorDesc/ActorDesc.styles';\nimport Thumb from \"../Thumb\";\nimport Timeline from \"../Timeline\";\n\n\n\nconst ActorDesc = ({ actor, imageURL }) => {\n\n    let actor_year = new Date(actor.birthday).getFullYear();\n    let today_year = new Date().getFullYear();\n    let age = today_year - actor_year;\n\n\n\n    return (\n        <Content>\n            <div className=\"bio\">\n                <h1>{actor.name}</h1>\n                <p className=\"bio-text\">{actor.biography ? `${actor.biography}` : `${\"The Biogpraphy is not available\"}`}</p>\n                <Timeline />\n            </div>\n\n            <div className=\"aligns\">\n                <div className=\"photo\">\n                    <Thumb\n                        image={imageURL} clickable={false} alt='movie-thumb'\n                    />\n                </div>\n                <Text>\n                    <h2  >Personal Info</h2>\n                    <h3 className=\"actor-detail-heading\"> Known For : </h3> {actor.known_for_department}\n                    <p></p>\n                    <h3 className=\"actor-detail-heading\">Gender : </h3> {actor.gender === 2 ? \"Male\" : \"Female\"}\n                    <p></p>\n                    <h3 className=\"actor-detail-heading\">Birthday : </h3>{actor.birthday ? actor.birthday + \" (\" + age + \" years old )\" : \"NA\"}\n                    <p></p>\n                    <h3 className=\"actor-detail-heading\">Place of Birth :</h3> {actor.place_of_birth ? actor.place_of_birth : \"NA\"}\n                    <p></p>\n                    <h3 className=\"actor-detail-heading\">Also Known As : </h3> {actor.also_known_as ? actor.also_known_as.map(name => <p>{name}</p>) : \"NA\"}\n\n                </Text>\n            </div>\n        </Content >\n    )\n\n}\n\n\nexport default ActorDesc;","import React from \"react\";\nimport { useParams } from 'react-router';\n\n//config\n\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../config\";\n//components\nimport BreadCrumb from \"../BreadCrumb\";\nimport ActorDesc from '../ActorDesc';\nimport Spinner from \"../Spinner\";\n\n\n//hook\nimport { useActorFetch } from \"../../hooks/useActorFetch\"\n\n//image \nimport NoImage from \"../../images/no_image.jpg\";\n\n\nconst ActorInfo = () => {\n    const { id } = useParams();\n    const { state: actor, loading, error } = useActorFetch(id)\n    console.log(actor);\n\n\n    if (loading)\n        return <Spinner />\n    if (error)\n        return <div> Something went wrong....</div>\n\n    return (\n        <div>\n            <BreadCrumb Title={actor.name} />\n            <ActorDesc\n                actor={actor}\n                imageURL=\n                {actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}` : NoImage}\n            />\n\n        </div>\n    )\n\n\n\n\n\n};\n\n\nexport default ActorInfo;\n","import { useState, useEffect, useRef } from \"react\";\nimport API from '../API';\n\n\n\nexport const useActorFetch = (actorId) => {\n    const [state, setState] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        const fetchActor = async () => {\n            try {\n                setLoading(true);\n                setError(false);\n                const actor = await API.fetchActor(actorId);\n\n                setState({\n                    ...actor\n                })\n                setLoading(false);\n            }\n            catch (error) {\n                setError(true);\n            }\n        };\n\n        fetchActor();\n    }, [actorId])\n\n    return { state, loading, error };\n\n\n}","import React from 'react';\n//Router\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n//styles\nimport { GlobalStyle } from './GlobalStyle'; // as the component was not exported  default hence curly braces. \n//components\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Movie from './components/Movie';\nimport NotFound from './components/NotFound';\n//import Actor from './components/Actor';\nimport ActorInfo from './components/ActorInfo';\n\n\n\nconst App = () =>\n(\n  <Router>\n    <Header />\n\n    <Routes>\n      <Route exact path='/' element={<Home />} />\n      <Route exact path='/:movieId' element={<Movie />} />\n      <Route exact path='/person/:id' element={<ActorInfo />} />\n      <Route path='/*' element={<NotFound />} />\n    </Routes>\n\n    <GlobalStyle />\n  </Router>\n);\n\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}